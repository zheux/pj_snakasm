%ifndef VIDEO_MAC
%define VIDEO_MAC

%define COLS 80
%define ROWS 25

%define FG.BLACK   0 << 8
%define FG.BLUE    1 << 8
%define FG.GREEN   2 << 8
%define FG.CYAN    3 << 8
%define FG.RED     4 << 8
%define FG.MAGENTA 5 << 8
%define FG.BROWN   6 << 8
%define FG.GRAY    7 << 8
%define FG.BRIGHT  8 << 8

%define BG.BLACK   0 << 12
%define BG.BLUE    1 << 12
%define BG.GREEN   2 << 12
%define BG.CYAN    3 << 12
%define BG.RED     4 << 12
%define BG.MAGENTA 5 << 12
%define BG.BROWN   6 << 12
%define BG.GRAY    7 << 12
%define BG.BRIGHT  8 << 12

;Video Attribute Byte Colors
%define COLOR.BLACK   0
%define COLOR.BLUE    1
%define COLOR.GREEN   2
%define COLOR.CYAN    3
%define COLOR.RED     4
%define COLOR.MAGENTA 5
%define COLOR.YELLOW  6
%define COLOR.GRAY    7
%define COLOR.BRIGHT  8


%endif ; VIDEO_MAC

section .text
    ;macro para pintar en linea en fbuffer (a, b, c, d, e) a: posicion del byte[] q contiene lo q se va a pintar
    ;b: posicion donde se empieza a pintar  c: cantidad de elementos a pintar    d: foreground color e: background color
    %macro paint_row 3
      push ecx
      push ax

      xor ecx, ecx
      %%loop:
      mov al, [%1 + ecx]
      mov [%2 + 2 * ecx], al
      inc ecx
      cmp ecx, %3
      jl %%loop

      pop ax
      pop ecx
    %endmacro
